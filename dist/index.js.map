{"version":3,"file":"index.js","names":["_utils","require","_interactiveTilt","_interopRequireDefault","_splittingLite","_lenis","_gsap","_ScrollTrigger","e","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","toPrimitive","call","TypeError","String","Number","gsap","registerPlugin","ScrollTrigger","lenis","initSmoothScrolling","Lenis","lerp","smoothWheel","on","update","scrollFn","time","raf","requestAnimationFrame","setupAnimationDefaults","itemElement","options","defaults","clipPaths","step1","initial","step2","scrollTrigger","trigger","start","end","scrub","perspective","prepareTextForAnimation","textSpans","querySelectorAll","Splitting","target","charsArray","Array","from","map","span","charArray","set","opacity","fx1","settings","imageElement","querySelector","innerElements","tl","timeline","ease","onStart","fromTo","to","rotationY","scale","add","classList","toggle","startAt","addLabel","index","staggerDirection","yPercent","stagger","fx2","rotationZ","scaleX","sort","Math","random","duration","fx3","text","scaleY","left","rotationX","skewY","fx4","fxIntro","inner","xPercent","scroll","items","id","animationProfile","interactiveTilt","pin","item","document","InteractiveTilt","console","warn","concat","preloadImages","then","body","remove","year"],"sources":["../public/javascripts/index.js"],"sourcesContent":["import {preloadImages, year} from \"./utils.js\";\nimport  InteractiveTilt  from './interactive-tilt.js';\nimport \"../stylesheets/style.css\"\nimport Splitting from \"splitting/dist/splitting-lite.js\";\nimport Lenis from \"lenis\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\ngsap.registerPlugin( ScrollTrigger );\n\n// Define a variable to store the Lenis smooth scrolling object\nlet lenis;\n\n// Initializes Lenis for smooth scrolling with specific properties\nconst initSmoothScrolling = () => {\n    // Instantiate the Lenis object with specified properties\n    lenis = new Lenis({\n        lerp: 0.1, // Lower values create a smoother scroll effect\n        smoothWheel: true // Enables smooth scrolling for mouse wheel events\n    });\n\n    // Update ScrollTrigger each time the user scrolls\n    lenis.on('scroll', () => ScrollTrigger.update());\n\n    // Define a function to run at each animation frame\n    const scrollFn = (time) => {\n        lenis.raf(time); // Run Lenis' requestAnimationFrame method\n        requestAnimationFrame(scrollFn); // Recursively call scrollFn on each frame\n    };\n    // Start the animation frame loop\n    requestAnimationFrame(scrollFn);\n};\n\n// Sets up default animation settings and merges with options\nconst setupAnimationDefaults = (itemElement, options) => {\n    // Default settings for clip paths and scroll trigger\n    let defaults = {\n        clipPaths: {\n            step1: {\n                initial: 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)',\n                final: 'polygon(50% 0%, 50% 50%, 50% 50%, 50% 100%)',\n            },\n            step2: {\n                initial: 'polygon(50% 50%, 50% 0%, 50% 100%, 50% 50%)',\n                final: 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)',\n            }\n        },\n        // Default scroll trigger settings\n        scrollTrigger: {\n            trigger: itemElement,\n            start: 'top 50%',\n            end: '+=50%',\n            scrub: true,\n        },\n        // Default perspective setting\n        perspective: false\n    };\n\n    // Merge defaults with options provided\n    if (options && options.scrollTrigger) {\n        defaults.scrollTrigger = {\n            ...defaults.scrollTrigger,\n            ...options.scrollTrigger\n        };\n    }\n\n    // Merge and return the complete settings\n    return {\n        ...defaults,\n        ...options,\n        scrollTrigger: defaults.scrollTrigger\n    };\n};\n\n// Prepares text within an element for animation by splitting it into characters and setting their initial opacity.\nconst prepareTextForAnimation = itemElement => {\n    // Query for the span elements within the itemElement\n    const textSpans = itemElement.querySelectorAll('.content__text > span');\n\n    // Perform the splitting operation\n    Splitting({ target: textSpans });\n\n    // Initialize an array to hold arrays of characters for each span\n    const charsArray = Array.from(textSpans).map(span => {\n        // Query for chars inside this span and return them as an array\n        return Array.from(span.querySelectorAll('.char'));\n    });\n\n    // Set the opacity of all characters to 0 using GSAP\n    charsArray.forEach(charArray => {\n        gsap.set(charArray, { opacity: 0 });\n    });\n\n    // Return the charsArray\n    return charsArray;\n};\n\n// Animation profiles for each item\n\n// First animation effect\nconst fx1 = (itemElement, options) => {\n    // Set up the animation settings\n    const settings = setupAnimationDefaults(itemElement, options);\n    // Select the elements to animate\n    const imageElement = itemElement.querySelector('.content__img');\n    const innerElements = imageElement.querySelectorAll('.content__img-inner'); // Now it selects both inners\n    // Prepare the text for animation and retrieve the character arrays\n    const charsArray = prepareTextForAnimation(itemElement);\n\n    // Define and return the GSAP timeline for the animation\n    const tl = gsap.timeline({\n        // Default easing for all animations in this timeline\n        defaults: {\n            ease: 'none'\n        },\n        // Event hook for when the timeline starts\n        onStart: () => {\n            // Apply perspective if specified\n            if ( settings.perspective ) {\n                gsap.set(imageElement, {\n                    perspective: settings.perspective\n                });\n            }\n        },\n        // ScrollTrigger configuration for this timeline\n        scrollTrigger: settings.scrollTrigger\n    })\n        // The sequence of animation steps\n        .fromTo(imageElement, {\n            // Initial state for the animation\n            filter: 'brightness(100%)',\n            'clip-path': settings.clipPaths.step1.initial\n        }, {\n            ease: 'sine.in',\n            // Final state for the animation\n            filter: 'brightness(800%)',\n            'clip-path': settings.clipPaths.step1.final\n        }, 0)\n        .to(innerElements[0], {\n            ease: 'sine.in',\n            // Rotation and scale effect for the inner element\n            rotationY: -40,\n            scale: 1.4,\n        }, 0)\n        // Switch image\n        .add(() => {\n            // Toggle the visibility of the inner elements\n            innerElements[0].classList.toggle('content__img-inner--hidden');\n            innerElements[1].classList.toggle('content__img-inner--hidden');\n        })\n        .to(imageElement, {\n            // Start state for the next animation step\n            startAt: {\n                'clip-path': settings.clipPaths.step2.initial\n            },\n            // Final state for the next animation step\n            'clip-path': settings.clipPaths.step2.final,\n            filter: 'brightness(100%)'\n        })\n        .to(innerElements[1], {\n            // Start state for rotation and scale reset\n            startAt: {rotationY: 40, scale: 1.4},\n            // Reset rotation and scale to original\n            rotationY: 0,\n            scale: 1,\n        }, '<') // '<' indicates that this step starts at the same time as the previous one\n        .addLabel('texts', '<-=0.3');\n\n    charsArray.forEach((charArray, index) => {\n        const staggerDirection = index % 2 === 0 ? 1 : -1; // Alternate stagger direction\n\n        tl.to(charArray, {\n            startAt: {opacity: 1, scale: .2},\n            opacity: 1,\n            scale: 1,\n            yPercent: -staggerDirection*40,\n            stagger: staggerDirection*0.04\n        }, 'texts');\n    });\n\n    return tl;\n}\n\nconst fx2 = (itemElement, options) => {\n    // Set up the animation settings\n    const settings = setupAnimationDefaults(itemElement, options);\n    // Select the elements to animate\n    const imageElement = itemElement.querySelector('.content__img');\n    const innerElements = imageElement.querySelectorAll('.content__img-inner'); // Now it selects both inners\n    const charsArray = prepareTextForAnimation(itemElement);\n\n    const tl = gsap.timeline({\n        defaults: {\n            ease: 'none'\n        },\n        onStart: () => {\n            if ( settings.perspective ) {\n                gsap.set([imageElement, itemElement], {\n                    perspective: settings.perspective\n                });\n            }\n        },\n        scrollTrigger: settings.scrollTrigger\n    })\n        .fromTo(imageElement, {\n            filter: 'brightness(100%) hue-rotate(0deg)',\n            'clip-path': settings.clipPaths.step1.initial\n        }, {\n            filter: 'brightness(800%) hue-rotate(90deg)',\n            'clip-path': settings.clipPaths.step1.final\n        }, 0)\n        .to(innerElements[0], {\n            rotationZ: -5,\n            scaleX: 1.8,\n        }, 0)\n        // Switch image\n        .add(() => {\n            // Toggle the visibility of the inner elements\n            innerElements[0].classList.toggle('content__img-inner--hidden');\n            innerElements[1].classList.toggle('content__img-inner--hidden');\n        })\n        .to(imageElement, {\n            startAt: {\n                'clip-path': settings.clipPaths.step2.initial\n            },\n            'clip-path': settings.clipPaths.step2.final,\n            filter: 'brightness(100%) hue-rotate(0deg)'\n        })\n        .to(innerElements[1], {\n            startAt: {rotationZ: 5, scaleX: 1.8},\n            rotationZ: 0,\n            scaleX: 1,\n        }, '<')\n        .addLabel('texts', '<-=0.3');\n\n    charsArray.forEach((charArray, index) => {\n        charArray.sort(() => Math.random() - 0.5);\n        const staggerDirection = index % 2 === 0 ? 1 : -1; // Alternate stagger direction\n\n        tl.to(charArray, {\n            duration: 0.1,\n            opacity: 1,\n            stagger: staggerDirection*0.04\n        }, 'texts');\n    });\n\n    return tl;\n}\n\nconst fx3 = (itemElement, options) => {\n    // Set up the animation settings\n    const settings = setupAnimationDefaults(itemElement, options);\n    // Select the elements to animate\n    const imageElement = itemElement.querySelector('.content__img');\n    const innerElements = imageElement.querySelectorAll('.content__img-inner'); // Now it selects both inners\n    const text = itemElement.querySelector('.content__text');\n\n    return gsap.timeline({\n        defaults: {\n            ease: 'none'\n        },\n        onStart: () => {\n            if ( settings.perspective ) {\n                gsap.set([imageElement, itemElement], {\n                    perspective: settings.perspective\n                });\n            }\n        },\n        scrollTrigger: settings.scrollTrigger\n    })\n        .fromTo(imageElement, {\n            scaleX: 1.5,\n            scaleY: 0.8,\n            left: 100,\n            filter: 'brightness(100%) contrast(100%)',\n            'clip-path': settings.clipPaths.step1.initial\n        }, {\n            left: 0,\n            ease: 'sine',\n            rotationX: -35,\n            rotationY: 35,\n            filter: 'brightness(60%) contrast(400%)',\n            scale: 1.4,\n            'clip-path': settings.clipPaths.step1.final\n        }, 0)\n        .to(innerElements[0], {\n            ease: 'sine',\n            skewY: 10,\n            scaleY: 1.2,\n        }, 0)\n\n        // Switch image\n        .add(() => {\n            // Toggle the visibility of the inner elements\n            innerElements[0].classList.toggle('content__img-inner--hidden');\n            innerElements[1].classList.toggle('content__img-inner--hidden');\n        }, '>')\n        .to(imageElement, {\n            ease: 'sine.in',\n            startAt: {\n                'clip-path': settings.clipPaths.step2.initial\n            },\n            'clip-path': settings.clipPaths.step2.final,\n            filter: 'brightness(100%) contrast(100%)',\n            scale: 1,\n            rotationX: 0,\n            rotationY: 0,\n        }, '<')\n        .to(innerElements[1], {\n            ease: 'sine.in',\n            startAt: {skewY: 10, scaleY: 1.5},\n            skewY: 0,\n            scaleY: 0.8,\n        }, '<')\n\n        .fromTo(text, {\n            opacity: 0,\n            yPercent: 40,\n        }, {\n            opacity: 5,\n            yPercent: 0,\n        }, '>')\n        .to(imageElement, {\n            ease: 'sine',\n            startAt: {filter: 'brightness(100%) contrast(100%) opacity(100%)'},\n            filter: 'brightness(60%) contrast(400%) opacity(20%)',\n            rotationX: 25,\n            rotationY: 1.5,\n            scale: 1.2\n        }, '<')\n}\n\nconst fx4 = (itemElement, options) => {\n    // Set up the animation settings\n    const settings = setupAnimationDefaults(itemElement, options);\n    // Select the elements to animate\n    const imageElement = itemElement.querySelector('.content__img');\n    const innerElements = imageElement.querySelectorAll('.content__img-inner'); // Now it selects both inners\n    // Prepare the text for animation and retrieve the character arrays\n    const charsArray = prepareTextForAnimation(itemElement);\n\n    const tl = gsap.timeline({\n        defaults: {\n            ease: 'power1.inOut'\n        },\n        onStart: () => {\n            if ( settings.perspective ) {\n                gsap.set([imageElement, itemElement], {\n                    perspective: settings.perspective\n                });\n            }\n        },\n        scrollTrigger: settings.scrollTrigger\n    })\n        .fromTo(imageElement, {\n            filter: 'brightness(100%) grayscale(0%)',\n            'clip-path': settings.clipPaths.step1.initial\n        }, {\n            rotationZ: 90,\n            scale: 0.6,\n            filter: 'brightness(800%) grayscale(100%)',\n            'clip-path': settings.clipPaths.step1.final\n        }, 0)\n        .to(innerElements[0], {\n            rotationZ: -5,\n            scaleX: 1.4,\n        }, 0)\n        // Switch image\n        .add(() => {\n            // Toggle the visibility of the inner elements\n            innerElements[0].classList.toggle('content__img-inner--hidden');\n            innerElements[1].classList.toggle('content__img-inner--hidden');\n        })\n        .to(imageElement, {\n            startAt: {\n                'clip-path': settings.clipPaths.step1.final, rotationZ: -90\n            },\n            'clip-path': settings.clipPaths.step2.final,\n            filter: 'brightness(100%) grayscale(0%)',\n            rotationZ: 0,\n            scale: 1,\n        })\n        .to(innerElements[1], {\n            startAt: {rotationZ: -350, scaleX: 1.4},\n            rotationZ: -360,\n            scaleX: 1,\n        }, '<')\n        .addLabel('texts', '<-=0.3');\n\n    charsArray.forEach((charArray, index) => {\n        const staggerDirection = index % 2 === 0 ? 1 : -1; // Alternate stagger direction\n\n        tl.to(charArray, {\n            startAt: {opacity: 1, scale: .2},\n            opacity: 1,\n            scale: 1,\n            yPercent: staggerDirection*400,\n            stagger: staggerDirection*0.02\n        }, 'texts');\n    });\n\n    return tl;\n}\n\n// First animation effect\nconst fxIntro = (itemElement, options) => {\n    // Set up the animation settings\n    const settings = setupAnimationDefaults(itemElement, options);\n    // Select the elements to animate\n    const imageElement = itemElement.querySelector('.content__img');\n    const inner = imageElement.querySelector('.content__img-inner');\n\n    // Define and return the GSAP timeline for the animation\n    return gsap.timeline({\n        // Default easing for all animations in this timeline\n        defaults: {\n            ease: 'none'\n        },\n        // Event hook for when the timeline starts\n        onStart: () => {\n            // Apply perspective if specified\n            if ( settings.perspective ) {\n                gsap.set(imageElement, {\n                    perspective: settings.perspective\n                });\n            }\n        },\n        // ScrollTrigger configuration for this timeline\n        scrollTrigger: settings.scrollTrigger\n    })\n        // The sequence of animation steps\n        .fromTo(imageElement, {\n            scale: 1,\n            xPercent: 0,\n            filter: 'brightness(100%)',\n            'clip-path': settings.clipPaths.step1.initial\n        }, {\n            scale: 0.5,\n            xPercent: -50,\n            'clip-path': settings.clipPaths.step1.final,\n            filter: 'brightness(500%)',\n        }, 0)\n        .to(inner, {\n            rotationY: -40,\n            scale: 1.4,\n        }, 0)\n        .to(imageElement, {\n            startAt: {\n                'clip-path': settings.clipPaths.step2.initial\n            },\n            scale: 0,\n            xPercent: -100,\n            'clip-path': settings.clipPaths.step2.final,\n            filter: 'brightness(100%)'\n        })\n        .to(inner, {\n            startAt: {rotationY: 40},\n            rotationY: 0,\n            scale: 1,\n        }, '<');\n}\n\n// Main function to apply scroll-triggered animations\nconst scroll = () => {\n    // Define items and associate them with their animation profiles and options\n    const items = [\n        {\n            id: '#item-1',\n            animationProfile: fx1,\n            interactiveTilt: true, // This item should have the InteractiveTilt effect\n            options: {\n                perspective: 1000\n            }\n        },\n        {\n            id: '#item-2',\n            animationProfile: fx2,\n            interactiveTilt: true, // This item should have the InteractiveTilt effect\n            options: {\n                clipPaths: {\n                    step1: {\n                        initial: 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)',\n                        final: 'polygon(40% 50%, 60% 50%, 80% 50%, 20% 50%)',\n                    },\n                    step2: {\n                        initial: 'polygon(20% 50%, 80% 50%, 60% 50%, 40% 50%)',\n                        final: 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)',\n                    }\n                },\n                scrollTrigger: {\n                    start: 'center bottom',\n                    end: 'top top'\n                },\n                perspective: 500\n            }\n        },\n        {\n            id: '#item-3',\n            animationProfile: fx3,\n            options: {\n                clipPaths: {\n                    step1: {\n                        initial: 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)',\n                        final: 'polygon(50% 0%, 50% 50%, 50% 50%, 50% 100%)',\n                    },\n                    step2: {\n                        initial: 'polygon(50% 50%, 50% 0%, 50% 100%, 50% 50%)',\n                        final: 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)',\n                    }\n                },\n                scrollTrigger: {\n                    start: 'center center',\n                    end: '+=150%',\n                    pin: true\n                },\n                perspective: 400\n            }\n        },\n        {\n            id: '#item-4',\n            animationProfile: fx4, // This item should have the InteractiveTilt effect\n            options: {\n                clipPaths: {\n                    step1: {\n                        initial: 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)',\n                        final: 'polygon(40% 50%, 60% 50%, 80% 50%, 20% 50%)',\n                    },\n                    step2: {\n                        initial: 'polygon(20% 50%, 80% 50%, 60% 50%, 40% 50%)',\n                        final: 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)',\n                    }\n                },\n                scrollTrigger: {\n                    start: 'center bottom',\n                    end: 'top top-=10%'\n                },\n                perspective: 500\n            }\n        },\n        {\n            id: '#item-intro',\n            animationProfile: fxIntro,\n            interactiveTilt: true, // This item should have the InteractiveTilt effect\n            options: {\n                scrollTrigger: {\n                    start: 'clamp(top bottom)',\n                    end: 'center top'\n                },\n                perspective: 1000\n            }\n        },\n    ];\n\n    // Iterate over the items and apply their animations\n    items.forEach(item => {\n        const itemElement = document.querySelector(item.id);\n        // Check if element exists and has an animation profile\n        if ( itemElement && item.animationProfile ) {\n            // Apply the animation profile to the element with the specified options\n            item.animationProfile(itemElement, item.options);\n\n            // Check if the interactive tilt effect should be applied\n            if ( item.interactiveTilt ) {\n                // Instantiate the InteractiveTilt object for this item\n                new InteractiveTilt(itemElement);\n            }\n        } else {\n            // Warn if the element or animation profile is not found\n            console.warn(`Element with ID ${item.id} or its animation profile is not defined.`);\n        }\n    });\n}\n\n// Preloading all images specified by the selector\npreloadImages('.content__img-inner').then(() => {\n    // Once images are preloaded, remove the 'loading' indicator/class from the body\n    document.body.classList.remove('loading');\n    // Initialize Lenis\n    initSmoothScrolling();\n    // Apply scroll-triggered animations to each item\n    scroll();\n});\n\nyear();\n\n"],"mappings":"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","ignoreList":[]}